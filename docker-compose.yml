version: '3'
services:

  ## Config Servers
  cfg_r1:
    image: richackard/twitter_mongo_db
    deploy: 
      restart_policy: 
        condition: on-failure
    networks: 
      - twinet  
    command: 
      - /bin/sh
      - -c
      - |
          mongod --port 27018 --configsvr --replSet cfg --noprealloc --smallfiles --oplogSize 16 --bind-ip=0.0.0.0
          #mongo < init_shard1.js

  cfg_r2:
    image: richackard/twitter_mongo_db
    deploy: 
      restart_policy: 
        condition: on-failure
    networks: 
      - twinet  
    command: mongod --port 27018 --configsvr --replSet cfg --noprealloc --smallfiles --oplogSize 16 --bind-ip=0.0.0.0


  ## Shards
  shard01_rep1:
    image: richackard/twitter_mongo_db
    deploy: 
      restart_policy: 
        condition: on-failure
    networks: 
      - twinet  
    command: 
      - /bin/sh
      - -c
      - |
          mongod --port 27019 --shardsvr --replSet shard01 --noprealloc --smallfiles --oplogSize 16 --bind-ip=0.0.0.0
          mongo < init_shard1.js


  shard01_rep2:
    image: richackard/twitter_mongo_db
    deploy: 
      restart_policy: 
        condition: on-failure
    networks: 
      - twinet  
    command: mongod --port 27019 --shardsvr --replSet shard01 --noprealloc --smallfiles --oplogSize 16 --bind-ip=0.0.0.0



  shard02_rep1:
    image: richackard/twitter_mongo_db
    deploy: 
      restart_policy: 
        condition: on-failure
    networks: 
      - twinet
    command: 
      - /bin/sh
      - -c
      - |
          mongod --port 27019 --shardsvr --replSet shard02 --noprealloc --smallfiles --oplogSize 16 --bind-ip=0.0.0.0
          mongo < init_shard2.js
  

  shard02_rep2:
    image: richackard/twitter_mongo_db
    deploy: 
      restart_policy: 
        condition: on-failure
    networks: 
      - twinet  
    command: mongod --port 27019 --shardsvr --replSet shard02 --noprealloc --smallfiles --oplogSize 16 --bind-ip=0.0.0.0


  shard03_rep1:
    image: richackard/twitter_mongo_db
    deploy: 
      restart_policy: 
        condition: on-failure
    networks: 
      - twinet
    command: 
      - /bin/sh
      - -c
      - |
          mongod --port 27019 --shardsvr --replSet shard03 --noprealloc --smallfiles --oplogSize 16 --bind-ip=0.0.0.0
          mongo < init_shard3.js

  shard03_rep2:
    image: richackard/twitter_mongo_db
    deploy: 
      restart_policy: 
        condition: on-failure
    networks: 
      - twinet
    command: mongod --port 27019 --shardsvr --replSet shard03 --noprealloc --smallfiles --oplogSize 16 --bind-ip=0.0.0.0
  

  ## Router
  mongo_db:
    image: richackard/twitter_mongo_db
    deploy: 
      restart_policy: 
        condition: on-failure
    command: 
      - /bin/sh
      - -c
      - |
          mongos --port 27017 --configdb cfg/cfg_r1:27018,cfg_r2:27018 --bind-ip=0.0.0.0
          mongos < init_router.js

    depends_on:
      - cfg_r1
      - cfg_r2
      - shard01_rep1
      - shard01_rep2
      - shard02_rep1
      - shard02_rep2
      - shard03_rep1
      - shard03_rep2
    networks: 
      - twinet  


  postgre_db:
    image: "postgres:latest"
    ports: 
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: hyy19960529
    networks: 
      - twinet            

  # mongo_db:
  #   image: mongo:latest
  #   ports:
  #     - "27017:27017"
  #   networks: 
  #     - twinet 

  amqp_service:
    image: "rabbitmq:3.7.4-management"
    ports: 
      - "5672:5672"
      - "8081:15672"      
    networks: 
      - twinet 

  api_gateway:
    image: richackard/twitter_gateway_service
    ports:
      - "80:80"
    deploy:
      replicas: 2
      restart_policy:
        delay: "1s"
        condition: on-failure
    networks: 
      - twinet 

  auth_service:
    image: richackard/twitter_auth_service
    deploy:
      replicas: 3
      restart_policy:
        delay: "1s"
        condition: on-failure
    networks: 
      - twinet 

  email_service:
    image: richackard/twitter_email_service
    deploy:
      replicas: 1
      restart_policy: 
        delay: "1s"
        condition: on-failure
    networks: 
      - twinet 

  profile_service:
    image: richackard/twitter_profile_service
    deploy:
      replicas: 2
      restart_policy:
        delay: "1s"
        condition: on-failure
    networks: 
      - twinet 

  tweet_service:
    image: richackard/twitter_tweet_service
    deploy:
      replicas: 3
      restart_policy:
        delay: "1s"
        condition: on-failure
    networks: 
      - twinet

  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints: [node.role == manager]
    networks:
      - twinet

networks: 
  twinet:
    driver: overlay
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16
