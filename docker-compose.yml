version: '3'
services:

  postgre_db:
    image: "postgres:latest"
    ports: 
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: hyy19960529
    networks: 
      - twinet            

  mongo_db:
    image: mongo:latest
    ports:
      - "27017:27017"
    networks: 
      - twinet 

  amqp_service:
    image: "rabbitmq:3.7.4-management"
    ports: 
      - "5672:5672"
      - "8081:15672"      
    networks: 
      - twinet 

  api_gateway:
    image: 10.0.1.6:5000/twitter_gateway_service
    ports:
      - "80:80"
    deploy:
      replicas: 1
      restart_policy:
        delay: "1s"
        condition: on-failure
    networks: 
      - twinet 

  auth_service:
    image: 10.0.1.6:5000/twitter_auth_service
    deploy:
      replicas: 1
      restart_policy:
        delay: "1s"
        condition: on-failure
    networks: 
      - twinet 

  email_service:
    image: 10.0.1.6:5000/twitter_email_service
    deploy:
      replicas: 1
      restart_policy: 
        delay: "1s"
        condition: on-failure
    networks: 
      - twinet 

  profile_service:
    image: 10.0.1.6:5000/twitter_profile_service
    deploy:
      replicas: 1
      restart_policy:
        delay: "1s"
        condition: on-failure
    networks: 
      - twinet 

  tweet_service:
    image: 10.0.1.6:5000/twitter_tweet_service
    deploy:
      replicas: 1
      restart_policy:
        delay: "1s"
        condition: on-failure
    networks: 
      - twinet

  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints: [node.role == manager]
    networks:
      - twinet

networks: 
  twinet:
    driver: overlay
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16
